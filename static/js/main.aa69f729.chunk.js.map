{"version":3,"sources":["Components/Tempapp.jsx","App.js","reportWebVitals.js","index.js"],"names":["Tempapp","useState","city","setCity","search","setSearch","useEffect","a","url","fetch","response","json","resJson","main","fetchApi","className","type","value","onChange","event","target","temp","temp_min","temp_max","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRA0DeA,EAvDC,WAEZ,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,UAArC,mBAAOG,EAAP,KAAeC,EAAf,KAqBA,OAnBAC,qBAAU,YACQ,uCAAG,gCAAAC,EAAA,6DACPC,EADO,4DACoDJ,EADpD,iEAEUK,MAAMD,GAFhB,cAEPE,EAFO,gBAGSA,EAASC,OAHlB,OAGPC,EAHO,OAKbT,EAAQS,EAAQC,MALH,2CAAH,qDAOdC,KACD,CAACV,IAWA,mCACI,sBAAKW,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,uBACIC,KAAK,SACLD,UAAU,aACVE,MAAOb,EACPc,SAAW,SAACC,GAAYd,EAAUc,EAAMC,OAAOH,YAGrDf,EAGE,sBAAKa,UAAU,OAAf,UACI,qBAAIA,UAAU,WAAd,UACI,mBAAGA,UAAU,qBAAb,eAAwCX,KAE5C,qBAAIW,UAAU,OAAd,UACKb,EAAKmB,KADV,aAGA,qBAAIN,UAAU,cAAd,iBACKb,EAAKoB,SADV,kBACgCpB,EAAKqB,SADrC,gBATJ,mBAAGR,UAAU,WAAb,kCC9BLS,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa69f729.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"./css/style.css\";\r\n\r\nconst Tempapp = () => {\r\n\r\n    const [city, setCity] = useState(null);\r\n    const [search, setSearch] = useState(\"MUMBAI\");\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=93537fa3d42004d746e4215c378f4d00`;\r\n            const response = await fetch(url);\r\n            const resJson = await response.json()  //to convert into json\r\n            //const setCity: (value: any) => void\r\n            setCity(resJson.main);\r\n        };\r\n        fetchApi();\r\n    }, [search] )\r\n\r\n    //const handleClick = () =>{\r\n    //  fetch(`http://api.weatherapi.com/v1/current.json?key=b13aa0fdf28d40819e4141743210405&q=${search}&aqi=no`)\r\n    // .then(response => response.json())\r\n    // .then(data => setCity(data.current.condition.text))\r\n    // <button onClick={handleClick}>Go</button>\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"box\">\r\n                <div className=\"inputData\">\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"inputField\"\r\n                        value={search}\r\n                        onChange={ (event) => { setSearch(event.target.value) }} />\r\n                </div>\r\n\r\n                {!city ? (\r\n                    <p className=\"errorMsg\"> No Data Found</p>\r\n                ) : (\r\n                    <div className=\"info\">\r\n                        <h1 className=\"location\">\r\n                            <i className=\"fas fa-street-view\"> </i>{search}\r\n                        </h1>\r\n                        <h1 className=\"temp\">\r\n                            {city.temp}°Cel\r\n                        </h1>\r\n                        <h3 className=\"tempmin_max\">\r\n                        Min {city.temp_min}°Cel | Max  {city.temp_max}°Cel</h3>\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tempapp;","import './App.css';\nimport Tempapp from './Components/Tempapp.jsx';\n\nfunction App() {\n  return (\n    <Tempapp />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}